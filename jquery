'.destination li'
descendant selector

'.destination > li'
direct child selector

'.destiantion, .orgin'
multiple selectors

'.destiantion li:first'
'.destiantion li:last'
'.destiantion li:odd'
'.destiantion li:even'
pseudo selector

$('#destination').find('li'); = $('#destination li')
	selection	   traversal
traversing - is faster

$('li:first');
$('li').first();

$('li').first()
.next();	// for siblings elements
.prev();	// for siblings elements
.parent();

$('.teste').children();
unlike find(), only select direct children

var price = $('<p>From $399.99</p>');

.before()
.after()
.prepend() - add to the first child
.append() - add to the last child

filtring
.eq(index) - array index of jquery objects returned instead of []
.filter(.c1)
.first() = eq(0)
.last() = eq(-1)

<li class="usa tour" data-discount="299">
var temp = $('.tour').data('discount');
get attribute data

$('.tour').on('click', 'button', function() {});
selector inside a event

$('#tour').find('img').slideDown();
img {display: none}

$('.photos').slideToggle();

var price = +$(this).data('price');
use + to convert the string to a number

va quantity = +=(this).val();
get the value from input tag

$('.vaction').on('click', '.expand', function(event){
	event.preventDefault();
	$(this).closest('.vacation')
		   .find('.comments')
		   .fadeToggle();
});
avoid screem change position because href=#- preventDefault()

$('.vaction').on('click', '.expand', function(event){
	event.stopPropagation();
	$(this).closest('.vacation')
		   .find('.comments')
		   .fadeToggle();
});
avoid propagation of event from container objects

$(this).css('background-color', 'red')
	   .css('border-color', '1px solid blue');
$(this).css({'background-color': 'red',
			 'border-color': '1px solid #333'})	   

$(this).addClass('highlighted');
$(this).removeClass('highlighted');
$(this).toggleClass('highlighted');

$(this).animate({'top': '-10px'});
$(this).animate({'top': '-10px'}, 'fast');
$(this).animate({'top': '-10px'}, 300); - ms

$(this).hasClass('highliht');

function Tour(el) {
  var tour = this;
  this.el = el;
  this.fetchPhotos = function() { 
    $.ajax('/photos.html', {
      data: {location: tour.el.data('location')},
      context: tour,
      success: function(response) {
        this.el.find('.photos').html(response).fadeIn();
      },
      error: function() {
        this.el.find('.photos').html('<li>There was a problem fetching the latest photos. Please try again.</li>');
      },
      timeout: 3000,
      beforeSend: function() {
        this.el.addClass('is-fetching');
      },
      complete: function() {
        this.el.removeClass('is-fetching');
      }
    });
  }
  this.el.on('click', 'button', this.fetchPhotos);
}
$(document).ready(function() { 
  var paris = new Tour($('#paris'));
  var london = new Tour($('#london'));
});

