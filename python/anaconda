# To control whether or not each shell session has the base environment activated or not, run: 
conda config --set auto_activate_base false

# Activate anaconda.
source <path_to_anaconda>/bin/activate
conda init
# Or.
conda activate

# Deactivate.
conda deactivate

# Launch Anaconda navigator.
~/anaconda3/bin/anaconda-navigator

# Conda is a cli equivalent of anaconda-navigator.
# Version.
conda --version

# Update conda.
conda update conda

# Create the env snowflakes and install BioPython.
conda create --name snowflakes biopython
# Or using a specific python version.
conda create --name snowflakes biopython python=3.5
# Create conda env on specific dir.
conda create --prefix /path/to/conda-env
conda create -p /path/to/conda-env
conda activate /path/to/conda-env

# Activate snowflakes env.
conda activate snowflakes
# Or
source activate snowflakes

# List all your environments.
conda info --envs
conda env list

# Remove env:
conda env remove -n ENV_NAME

# Check if a package not already installed is available from the anaconda repository.
conda activate snowflakes
conda search biopython
# Install the package.
conda install biopython
# List installed packages.
conda list

# Change python version.
conda activate my_env
conda install python=3.6

# List app packages to future replication.
conda env export > environment.yml
(conda-env) conda env export --file environment.yml
conda env export -n conda-env -f /path/to/environment.yml
# Replicate from a exported list.
conda env create -f environment.yml
conda env create -n conda-env -f /path/to/environment.yml
# Update from a exported list.
conda env update -n conda-env -f /path/to/environment.yml

# Install package from packages provided by third party repositories like conda-forge.
conda install --channel conda-forge opencv

# Start jupyter.
jupyter-notebook

# Start jupyter lab.
jupyter-lab
