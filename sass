Sass
Syntactically Awesome Stylesheets

Sass
not SASS

scss
sassy css

.scss
sassy extension

css is a valid scss

// This comment will not be output to the compiled css file
/* This will be */

@import 'buttons';
import buttons.scss, _buttons.scss, buttons.sass or _buttons.sass

_buttons.scss
underscore files will not be create .css files

// nesting selectors
sass
.content{
	h2 {}
	p {}
}
css
.content{}
.content h2 {
.content p {}
}

// nesting properties
sass
.btn {
	text: {
		decoration: underline;
		transform: lowercase;
	}
}
css
.btn {
	text-decoration: underline;
	text-transform: lowercase;
}

// ampersend, parent selector
sass
.content {
	.callout {}
	&.callout {}
}
css
.content{}
.content .callout{}
.content.callout{}

// pseudo class
sass
a {
	color: #FFF;
	&:hover {
		color: #777;
	}
	&:active {
		color: #888;
	}
}
css
a {
	color: #FFF;
}
a:hover {
		color: #777;
}
a:active {
		color: #888;
}

ampersand after
sass
.sidebar {
	.users & {
	}
}
css
.sidebar{
}
.users .sidebar {
}

ampersand nested
sass
.sidebar {
	h2 {
		.users & {
		}		
	}

}
css
& -> .sidebar h2
.users .sidebar h1

$base: #777777;		//define a variable
body{
	background-color: $base;
}


$base: #666666 !default;
since a value exist, it isn't overwriten

$side: top;
sup {
	position: relative;
	#{$side}: -0.5em;
}
.callout-#{$side} {
	background: #777;
}
interpolation

mixins
block of reusable code that take optional arguments
@mixin button {
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
btn-a {
	@include button;
	background: #777;
}

@mixin box-sizing($x: content-box){
	-webkit-box-sizing: $x;
	-moz-box-sizing: $x;
	box-sizing: $x;
}
.content {
	@include box-sizing(border-box);
	border: 1px solid #ccc;
	padding: 20px;
}

sass
.btn-a{
	background: #777;
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
.btn-b{
	@extend .btn-a;
	background: #fff;
}
css
.btn-a, 
.btn-b{
	background: #777;
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
.btn-b{
	background: #fff;
}

placeholder
%btn {
	background: #777;
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
btn-a {
	@extend %btn
}
btn-b {
	@extend %btn
}