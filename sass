Sass
Syntactically Awesome Stylesheets

Sass
not SASS

scss
sassy css

.scss
sassy extension

.sass
indented syntax

css is a valid scss

// This comment will not be output to the compiled css file
/* This will be */

@import 'buttons';
import buttons.scss, _buttons.scss, buttons.sass or _buttons.sass

_buttons.scss
underscore files will not be create .css files

// nesting selectors
sass
.content{
	h2 {}
	p {}
}
css
.content{}
.content h2 {
.content p {}
}

// nesting properties
sass
.btn {
	text: {
		decoration: underline;
		transform: lowercase;
	}
}
css
.btn {
	text-decoration: underline;
	text-transform: lowercase;
}

// ampersend, parent selector
sass
.content {
	.callout {}
	&.callout {}
}
css
.content{}
.content .callout{}
.content.callout{}

// pseudo class
sass
a {
	color: #FFF;
	&:hover {
		color: #777;
	}
	&:active {
		color: #888;
	}
}
css
a {
	color: #FFF;
}
a:hover {
		color: #777;
}
a:active {
		color: #888;
}

ampersand after
sass
.sidebar {
	.users & {
	}
}
css
.sidebar{
}
.users .sidebar {
}

ampersand nested
sass
.sidebar {
	h2 {
		.users & {
		}		
	}

}
css
& -> .sidebar h2
.users .sidebar h1

$base: #777777;		//define a variable
body{
	background-color: $base;
}


$base: #666666 !default;
since a value exist, it isn't overwriten

$side: top;
sup {
	position: relative;
	#{$side}: -0.5em;
}
.callout-#{$side} {
	background: #777;
}
interpolation

mixins
block of reusable code that take optional arguments
@mixin button {
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
btn-a {
	@include button;
	background: #777;
}

@mixin box-sizing($x: content-box){
	-webkit-box-sizing: $x;
	-moz-box-sizing: $x;
	box-sizing: $x;
}
.content {
	@include box-sizing(border-box);
	border: 1px solid #ccc;
	padding: 20px;
}

sass
.btn-a{
	background: #777;
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
.btn-b{
	@extend .btn-a;
	background: #fff;
}
css
.btn-a, 
.btn-b{
	background: #777;
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
.btn-b{
	background: #fff;
}

placeholder
%btn {
	background: #777;
	border: 1px solid #ccc;
	font-size: 1em;
	text-transform: uppercase;
}
btn-a {
	@extend %btn
}
btn-b {
	@extend %btn
}

@function fluidize($target, $context) {
	@return ($target / $context) * 100%;
}
.sidebar {
	width: fulidize(350px / 1000px);
}

$theme: dark;
header {
	@if $theme == dark {
		background: #000;
	} @else {
		background: #fff;
	}
}

$authors: nick aimme dan drew;
@each $author in $authors {
	.athor-#{$author} {
		background: url(author-#{$author}.jpg);
	}
}

.item {
	position: absolute;
	right: 0;
	@for $i from 1 through 3 {
		&.item-#{$i} {
			top: $i * 30px;
		}
	}
}

$i: 1;
.item {
	position: absolute;
	right: 0;
	@while $i < 4 {
		&.item-#{$i} {
			top: $i * 30px;
		}
		$i: $i + 1;
	}
}

trigger division
$size / 10
(100px / 20)
20px * 5 / 2

stringg addition
'sans-' + serif 	// 'sans-serif'
sans- + 'serif' 	// sans-serif

pre-defined math utilites
round,
ceil,
floor,
abs,
min,
max,
percentage(350px/1000px);		// 35%

color functions
$color: #333;
color: lighten($color, 20%);
color: darken($color, 20%);
color: saturate($color, 20%);
color: desaturate($color, 20%);
color: mix(#ffff00, #107fc9);
color: mix(#ffff00, #107fc9, 30%);
color: grayscale($color);
color: invert($color);
color: complement($color);

mixin
=box-sizing($x)
	-webkit-box-sizing: $x
	moz-box-sizing: $x
	box-sizing: $x
.content
	+box-sizing(border-box)

list functions
$authors: nick aimee dan drew
length($authors) 	// 4
append($authors, tim) 	// nick aimee dan drew tim
join($authors, $authors2)
index($authors, dan) 	// 3
index($authors, rob) 	// false
nth($authors, 3)	// dan
$authors: nick aimee
$co-authors: dan drew
zip($authors, $co-authors)	// nick dan, aimee drew

if(condition, true, false)
ternary operator if

@import 'compass';		// utilities, typography and css3
@import 'compass/layout';
@import 'compass/reset';	// adds set of rules based on Eric Meyer's reset after compiling

avoid 'compass/reset' in production
Normalize.css maybe better

.content
	+box-sizing(border-box)
// compass defined mixin to prefix browser vendor

+clearfix
// not recomended use this mixin from compass

compass mixin
background: image-url('bg-body.png') repeat
color: scale-lightness(#eee, 7%)
color: scale-saturation(#eee, 7%)
opposite-position(top) 	// bottom
pi, sin, cos, tan, e, log, sqrt, pow
contrast-color(input-color, dark-color, light-color, threshold)
stretch // compass/layout

@import compass
.log
	background: image-url('s.png')
	height: image-height('s.png')
	width: image-width('s.png')
.log{
	background: url('images/s.png')
	height: 236px;
	width: 236px;
}

inline-image('s.png')
base64 embed images
	