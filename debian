apt-get install chromium chromium-l10n vim audacity moc
dpkg -i atom.deb
apt-get -f install
apt-get remove atom
dpkg -i atom.deb
# remove node(conflict name program) - install nodejs and create ln node
apt-get install nodejs-legacy
update-alternatives --install /usr/bin/node node /usr/local/bin/node-4*/bin/node 10

whereis nodejs
ln -s [the path of nodejs] /usr/bin/node 
ln -s nodejs node in /usr/bin

# include in the /etc/apt/sources.list
deb http://security.debian.org/ jessie/updates main contrib non-free
deb-src http://security.debian.org/ jessie/updates main contrib non-free

deb http://ftp.br.debian.org/debian/ jessie-updates main non-free contrib
deb-src http://ftp.br.debian.org/debian/ jessie-updates main non-free contrib

deb http://ftp.br.debian.org/debian/ jessie main non-free contrib
deb-src http://ftp.br.debian.org/debian/ jessie main non-free contrib

deb http://ftp.br.debian.org/debian/ jessie-backports main non-free contrib
deb-src http://ftp.br.debian.org/debian/ jessie-backports main non-free contrib

move node-v4** to /usr/local/bin
ln -s node-4*/bin/node node
ln -s node-4*/bin/npm npm

sudo update-alternatives --install /usr/bin/eclipse eclipse $HOME/opt/Eclipse/scala/eclipse-scala 400
sudo update-alternatives --install /usr/bin/eclipse eclipse $HOME/opt/Eclipse/luna/eclipse-luna 300
sudo update-alternatives --install /usr/bin/eclipse eclipse $HOME/opt/Eclipse/kepler/eclipse-kepler 200

sudo update-alternatives --remove eclipse $HOME/opt/Eclipse/scala/eclipse-scala

update-alternatives --query eclipse


tar -xvzf arquivo.tar.gz
x - Extrai arquivos
v - verbose, exibe o nome dos arquivos extraídos (um por um)
z - O formato do arquivo é "gzip" (tar.gz)
f - Use the following tar archive for the operation

tar -xvjf arquivo.tar.bz2
j - O formato do arquivo é "bzip" (tar.bz2)

main hier



    /bin (and /sbin) were intended for programs that needed to be on a small / partition before the larger /usr, etc. partitions were mounted. These days, it mostly serves as a standard location for key programs like /bin/sh, although the original intent may still be relevant for e.g. installations on small embedded devices.

    /sbin, as distinct from /bin, is for system management programs (not normally used by ordinary users) needed before /usr is mounted.

    /usr/bin is for distribution-managed normal user programs.

    There is a /usr/sbin with the same relationship to /usr/bin as /sbin has to /bin.

    /usr/local/bin is for normal user programs not managed by the distribution package manager, e.g. locally compiled packages. You should not install them into /usr/bin because future distribution upgrades may modify or delete them without warning.

    /usr/local/sbin, as you can probably guess at this point, is to /usr/local/bin as /usr/sbin to /usr/bin.

In addition, there is also /opt which is for monolithic non-distribution packages, although before they were properly integrated various distributions put Gnome and KDE there. Generally you should reserve it for large, poorly behaved third party packages such as Oracle.

journalctl
check what is being printed to the journal