var test = 'arrrrrr';
console.log(test);
console.log(test.match(/ar+$/));	// Sring.match(regex);

console.log(/qwe/.test('asqwedf'));

/345/
asd345gfg
23456

/345 | 123/
or

ar+
one or more r

[a-z]
character set
represent only one character

[a-z]+
several characters

\d	Any digit character
\w	An alphanumeric character (“word character”)
\s	Any whitespace character (space, tab, newline, and similar)
\D	A character that is not a digit
\W	A nonalphanumeric character
\S	A nonwhitespace character
.	Any character except for newline

[.] inside character set, lost the mean. It just a point

/
modifier

/i
insensitive case modifier

/g
global modifier, keep look on all document
not stopping when find the first occurency

/m
multiline modifier
make ^  anchors to begin of line
make $  anchors to end of line

[a-z]/i
match on character lower or upper case

[A-Z\s]
upper case and white space

[0-9a-z]
characters and numbers

\w
word metacharacter
same than [a-zA-Z0-9_]

\.
match .

\+
match +

?
make proceeding pattern optional

\?
match ?

()
group
(com | net | org | edu)

^
start

$
end

\b
boundary metacharater
whole words only

[^]
^ mean "not" when placed within a character set

\d
digit character (number)

[^\d]
\D

[^\s]
\S

[^\w]
W

{}
interval expressions
[a-z]{2}
match two words
[a-z]{1,3}
match one or tree times

{0,1}
same as ?

{0,}
same as *

{1,}
same as + 

?:
non-capturing group