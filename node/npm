npm search request
search for a module in npm repository

'connect': '1.8.7'
1 - major version - will change api
8 - minor version - probably not change api
7 - patch version - doesn't change api

'connect': '~1'   - >=1.0.0 < 2.0.0 - dangerous
'connect': '~1.8' - >=1.8.0 < 1.9.0 - api could change
'connect': '~1.8.7' - >=1.8.7 < 1.9.0 - considered safe

~1.2.3 will match all 1.2.x versions but will miss 1.3.0.
^1.2.3 will match any 1.x.x release including 1.3.0, but will hold off on 2.0.0.

npm install express@4.9
install especific version

npm adduser
  authenticate in npm cli to publish

npm config ls
  show npm configuration

cd dir_package
npm publish
  publish npm packages

change the version
npm publish
    update a package

npm version major
npm version minor
npm version patch
  make 1.0.0 turn 1.0.1

version semantic
  0 - isn't yet stable for the initial release
  1.0.0 - read to be used
  1.0.1 - patch release - bug fix
  1.1.0 - minor release - new api functionality (new function), which doesn't break anything
  2.0.0 - major release - break api, no backward compability
  accept only patch release
    1.0
    1.0.x
    ~1.0.4
  accept minor release
    1
    1.x
    ^1.0.4
  accept major release
    *
    x

npm start
	run script prestart start and poststart

npm run-script script_name
	run script 

# update packages and update package.js
npm update --save

# update all global packages
npm update -g

# view outdated global packages
npm outdated -g

# update specific global package
npm update -g <package>

# list global modules installed
npm -g ls

# view current package version installed
npm v webpack version
alias: view, info, show

# view all packages versions
npm v webpack versions --json

# view all informations
npm v webpack
