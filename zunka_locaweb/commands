# Copy log file from server.
$ scp douglasmg7@vps10092.publiccloud.com.br:/home/douglasmg7/.local/share/zunka/log/zunkasite6.log .

# Copy file to server.
$ scp ./a.txt douglasmg7@vps10092.publiccloud.com.br:/home/douglasmg7/a.txt

# Backup cert (on server).
$ cd /etc
$ sudo tar -pcvzf letsencrypt.tar.gz letsencrypt/

# Copy file from server. 
$ scp douglasmg7@vps10092.publiccloud.com.br:/etc/letsencrypt.tar.gz letsencrypt.tar.gz

# Copy db from server.
cd ~/code/zunka/dump
$ scp douglasmg7@vps10092.publiccloud.com.br:/home/douglasmg7/zunka/dump/2018-Nov-27@18:49:28.gz .

# Encryp the file.
$ gpg -e -r douglasmg7@gmail.com letsencrypt.tar.gz

# Extract .gz files.
$ gaip -d <file.gz>

# See service log.
$ sudo journalctl -u certbot.service
# Just from current boot.
$ sudo journalctl -b -u certbot.service

# Db login.
mongo -u admin --authenticationDatabase admin -p
# Test not work yet (maybe neet open the port).
mongo vps10092.publiccloud.com.br:27017/zunka -u admin --authenticationDatabase admin -p

# Vps login.
ssh douglasmg7@vps10092.publiccloud.com.br

# Remove ssh key when REMOTE HOST IDENTIFICATION HAS CHANGED.
ssh-keygen -R vps10092.publiccloud.com.br

# To stop and then start the service again.
$ sudo systemctl restart nginx

# If you are simply making configuration changes, Nginx can often reload without dropping connections.
$ sudo systemctl reload nginx

# Linux logs.
$ su
$ less /var/log/syslog
$ less /var/log/syslog.1

# Verify ssh status.
$ systemctl status ssh

# Log service ssh.
$ journalctl -u ssh
$ journalctl -u ssh.service

# Log service ssh from current boot.
$ journalctl -u ssh -b

# Log current boot.
$ journalctl -b

# Log from date.
journalctl --since "2018-08-30 14:10:10" --until "2018-09-02 12:05:50"
journalctl --since "2019-03-30 08:10:10" --until "2019-03-02 19:05:50"

# Log kernel messages from previous boot with level err.
journalctl -k -b -1 -p err

# pm2
pm2 start   ecosystem.config.js --only zunka_srv
# Restart is faster, and if you don't care about 0-second downtime it might be preferable.
pm2 restart ecosystem.config.js --only zunka_srv
# Reload should be used always with stateless applications. It is also documented now that reload will fallback to restart after a timeout.
pm2 reload  ecosystem.config.js --only zunka_srv
pm2 delete  ecosystem.config.js --only zunka_srv

# Find out of memory erros.
grep -i -r "out of memory" /var/log/

# Process stat.
ps -p 1324 -o pid,cmd,size,%mem,%cpu

# Memory
free -h

# Filter by process id.
journalctl _PID=1324

# Process memory.
pmap 1324

# List zobie process.
ps axo stat,ppid,pid,comm | grep -w defunct
# Try to kill zombie process.
kill -s SIGCHLD PID
