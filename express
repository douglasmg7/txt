obtem a versão do express disponível no repositório
npm info express version

tool that provides a simple way to get an application skeleton going
sudo npm install -g express-generator

express myApp --css stylus
create an application skeleton using stylus and jade

npm install
install dependencies

npm start
start the server

install dependencies from package (run inside directory that contains the package.json)
sudo npm install

define environment variable to put node in production - last as long as your current shell session does
export NODE_ENV=production

keep between sessions
echo export NODE_ENV=production >> ~/.bash_profile

response.send({text: 'Hello'});
same than response.write(); response.end();
automatic convert json to string

response.json(blocks);
same response as response.send() for objects and arrays

app.get('/blocks', function(req, res){
	res.redirect('/parts');
	// res.redirect(301, '/parts'); optional status code
});
redirection

res.sendFile(__dirname + '/public/index.html');
serving files

app.use(express.static('public'));
middleware serving files from public folder

module.exports = function(req, res, next) {
	var start = +new Date();
	var stream = process.stdout;
	var url = req.url;
	var method = req.method;

	response.on('finish', function(){
		var duration = +new Date() - start;
		var message = method + ' to ' + url + 
			'\ntook ' + duration + ' ms \n\n';
		stream.write(message);
	});
	next();
}
creating a middleware

req.query.limit
reading query values

app.get('/blocks/:name' , function...
req.params.name - automaticly create the property
dynamic routes - name is a placehold for the rest of url

res.status(404).json({'No description found.')
send a error 404 message

app.param('name', function(req, res, next){
	var name = req.params.name;
	var block = name[0].toUpperCase; + name.slice(1).toLowerCase();
	req.blockName = block;
	next();
});
running pre-conditions on dynamic routes

continuar na pg 52



