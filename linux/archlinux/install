# download the lastest archlinux version from BitTorrent (recommended)  
https://www.archlinux.org/download/

# Verify PGP signature.
$ gpg --keyserver-options auto-key-retrieve --verify archlinux-xxx.iso.sig archlinux-xxx-x86_64.iso
# Primary key fingerprint and RSA must be equal. 
# It's ok "WARNING: This key is not certified with a trusted signature!"

# MD5 checksum.
$ md5sum archlinux-xxx.iso
# Value returned must be equal to the shown on the site.
# MD5: 2ad784bba7b5d3906ea61d76aec11778

# Check SHA1.
$ sha1sum archlinux-x-x86_64.iso
# Value returned must be equal to the shown on the site.
# SHA1: 53117ee010363388c114cf29e8a7154003854b76

# Find out the USB drive name.
$ sudo fdisk -l
# Or
$ lsblk

# Write iso to USB drive.
# Run the following command, replacing /dev/sdx with your drive, e.g. /dev/sdb. 
# (Do not append a partition number, so do not use something like /dev/sdb1) 
$ dd bs=4M if=path/to/archlinux.iso of=/dev/sdx status=progress oflag=sync

# Warning 
# This will irrevocably destroy all data on /dev/sdx. To restore the USB drive as an empty, usable storage device after using the Arch ISO image, the ISO 9660 filesystem signature needs to be removed by running wipefs --all /dev/sdx as root, before repartitioning and reformating the USB drive.
https://wiki.archlinux.org/index.php/USB_flash_installation_media

$ wifi-menu -o wlan0    
# Config wifi.

$ fdisk -l    
# Check partition table.

$ fdisk /dev/sda   
# Create partition.
# Root partition, /dev/sda1, as primary bootable with size 10 GB and ext4 formatted.
# Swap partition, /dev/sda2, as primary with size 2xRAM size.
# Logical partition, Home, /dev/sda5, rest of the space and ext4 formatted.
# Chose sda1 to be bootable - a options.
# Chose sda2 to be swap - t option, select 82.

$ mkfs.ext4 /dev/sda1   
# Format root partition.

$ mkfs.ext4 /dev/sda3   
# Format home partition.

$ mkswap /dev/sda2    
# Format swap.

$ swapon /dev/sda2    
# Activate the swap.

$ mount /dev/sda1 /mnt    
$ mkdir /mnt/home
$ mount /dev/sda3 /mnt/home
# Mount the system.

$ pacstrap /mnt base    
# Run script to install base package.
$ pacstrap /mnt base-devel    
# Run script to install base package dev.

$ genfstab /mnt >> /mnt/etc/fstab   
# Generate fstab file.

$ arch-chroot /mnt    
# Change root into the new system.

$ ln -sf /usr/share/zoneinfo/region/city /etc/localtime   
# Set the time zone.

$ hwclock --systohc   
# generate /etc/adjtime.

# Uncomment en_US.UTF-8 UTF-8 and other needed localizations in /etc/locale.gen, and generate them with:
locale-gen

# Change or create.
/etc/locale.conf
  LANG=en_US.UTF-8

# Change or create.
/etc/hostname
  myhostname

passwd    # change root password

# edit the file:
/etc/hosts

systemctl enable dhcpcd   # make network connections persistent

# grub installation
pacman -S grub os-prober
grub-install /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg

$ pacman -S wireless_tools wpa_supplicant dialog
# wifi-menu.

# exit installation
exit
umount /mnt/home
umount /mnt
reboot
# remove the intallation media
