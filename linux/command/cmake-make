# Patching.
# Sometimes the downloaded software is known not to work in your enviornment, and somebody has alredy figured out how
# to tweak it to resolve the problem. The person who solved the problem may publish their "tweak" in the form of a
# sed or awk command, a shell script containing multiple sed/awk commands, or a patch file. Obviously, you need to
# be cautious about such changes, applying them only if you trust the source or have the ability to double-check the 
# changes.

# A patchfile is created by using a "diff" tool to compare two versions of the same file and output the differences.
# The patch tool can take the output of "diff" and apply it to one of the files to "convert it" to the other version.
# The nice thing about patchfiles (ie the output of diff) is that is quite human-readable, ie it is reasonably easy
# to see what changes will be made.

# Prcess to compile and install a program from source.
# Unpack and read documentation.
$ tar xf <filename>
$ cd <dir created by above step>
$ less README
$ less INSTALL
# Generate customised makefile.
$ ./configure <some options>  # or cmake.
# Compile everything in the local directory.
$ make
# Update global directories.
$ sudo make install


# To create test from test.c (will execute "cc test.c -o test").
$ make test

# Report all warnings and debug.
$ CFLAGS=-Wall -g

# Using cflags option only durant the command (using environment variable).
$ CFLAGS="-Wall" make ex1

# Using for all commands into shell session.
$ export CFLAGS="-Wall"

# File name used by command make.
"Makefile"


# Notice that make and cmake are different programs. 
# cmake is a Makefile generator, and the make utility is governed by a Makefile textual file.
# cmake use CMakeLIsts.txt file.
# make use MakeFile file.

# To generate a build pipeline, CMake needs to know the source and binary folders.
# The source folder is the one containing CMakeLists.txt.
# The binary folder is where CMake generates the build pipeline.
# You can create the binary folder anywhere you want.
# A common practice is to create a subdirectory build beneath CMakeLists.txt.
# Into dir where exist CMakeLists.txt.
$ mkdir build && cd build
# Configure step - Will create pipeline into current directory from source ..
# Will use CMakeLIsts.txt file.
$ cmake ..  
# Compile - will use MakeFile file.
$ make      
# Install - copy files to "/usr/local".
$ sudo make install
# Uninstall - remove files from "/usr/local".
$ sudo make uninstall
