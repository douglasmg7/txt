# Alredy installed.
# htop tmux git

### Usefull commands ####################################################

# To show package information.
$ apt-cache show <package>

# To log as root.
$ su


### System configuration #################################################

# Log as root.
$ ssh root@vps10092.publiccloud.com.br

# Create a user.
$ useradd -m -g users -s /bin/bash douglasmg7

# Change password.
$ passwd douglasmg7

# Add to sudo group.
$ usermod -aG sudo douglasmg7

# Test sudo command (logout and login again, to update user group).
$ exit
$ ssh douglasmg7@vps10092.publiccloud.com.br
$ sudo whoami
# Shoud print "root".

# Refresh apt-get's cache of package information using the repository.
$ sudo apt-get update

# Upgrade installed softwares.
$ sudo apt-get upgrade

# Install node and npm using n node manage.
$ curl -L https://git.io/n-install | bash

# Install and use lts node version (8.11.4).
$ n lts

# Grant permission to node use ports <1024.
$ sudo setcap cap_net_bind_service=+ep $(which node)

# install mongodb (mongodb-tools included)
$ sudo apt-get install mongodb
# check that MongoDB has been started on port 27017
$ netstat -plntu

# configure mongodb user 
$ mongo
> use admin
# create admin user
> db.createUser({user:"admin", pwd:"password", roles:[{role:"root", db:"admin"}]})    
> exit
# edit "ExecStart" line from "/lib/systemd/system/mongod.service" add "--auth" option
# example: "ExecStart=/usr/bin/mongod --auth --config /etc/mongod.conf"
# reload systemd service
$ sudo systemctl daemon-reload
# restart mongodb
$ sudo service mongodb restart
# log into db
$ mongo -u admin --authenticationDatabase admin -p
# create user with backup privileges
> db.createUser({user: "backup", pwd: "password", roles: [{role: "backup", db: "admin"}]})
# create user with restore privileges
> db.createUser({user: "restore", pwd: "password", roles: [{role: "restore", db: "admin"}]})
# create user app
> use zunka
> db.createUser({user: "app", pwd: "password", roles: [{role: "readWrite", db: "zunka"}]})
# create user with dbOwner privileges
# this role combines the privileges granted by the readWrite, dbAdmin and userAdmin roles
> use zunka
> db.createUser({user: "douglasmg7", pwd: "password", roles: [{role: "dbOwner", db: "zunka"}]})
> exit
# Test user
$ mongo -u zunka -p
> use zunka
> exit

# Install redis.
$ sudo apt-get install redis

# install git-secret
$ sudo apt-get install git-secret

# create gpg key
# checking for existing GPG keys
$ gpg --list-secret-keys --keyid-format LONG

# Generating a GPG key.
$ gpg --full-generate-key
  # Press Enter to select RSA and RSA.
  # We recommend the maximum key size of 4096.
  # Press Enter to specify the default selection, indicating that the key doesn't expire.
 
# list the key
$ gpg --list-secret-keys --keyid-format LONG
# copy gpg key "<key>" rsa4096/<key> 2018-08-22 [SC]
# sec   rsa4096/DC40E6E3292EAE53 2018-08-22 [SC]
# key will be DC40E6E3292EAE53

# Prints the GPG key ID, in ASCII armor format
$ gpg --armor --export 3DC40E6E3292EAE5 > public_key.txt

# copy your GPG key, beginning with -----BEGIN PGP PUBLIC KEY BLOCK----- and ending with -----END PGP PUBLIC KEY BLOCK-----
# copy key to a system with x server to copy/paste on github
$ scp douglasmg7@server_url:/home/douglasmg7/zunka/a a
# Add the GPG key to your GitHub account

# get app
$ cd ~
$ git clone https://github.com/douglasmg7/zunka
$ cd zunka
$ npm install

# Install pm2.
$ npm install pm2 -g

# Insert product makers and product categories.
$ npm run insertMakers
$ npm run insertCategories

# Install nginx.
$ sudo apt-get install nginx
# Point to config file.
$ cd /etc/nginx
$ sudo cp nginx.conf nginx.conf.old
$ sudo ln -s /home/douglasmg7/zunka/nginx.conf nginx.cong

# Start server.
$ npm start
