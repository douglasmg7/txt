ctr + alt + f1
	login tty1 (virtual terminal)

ctr + alt + f7
	go to gui

dpms
	Debian Package Management System

apt
	A difference between apt and dpkg is that apt does not directly deal with .deb packages; instead, it manages software via the locations (repositories) specified in a configuration file. This file is the sources.list file.

dpkg -l
	list all currently installed softwares

dpkg -l bash
	Get basic information about the bash package.

dpkg --print-avail
	show detailed information about the bash package.

dpkg -L bash
dpkg-query -L bash
	list of files that comes with the bash package

dpkg -x file.deb
	extract a .deb file

dpkg --install lynx_2.8.6-2ubuntu2_i386.deb
dpkg --remove lynx
	Install and remove a .deb package.

dpkg-query -l
dpkg --get-selections | grep -v deinstall
	list of packages installed
	-v tag "inverts" grep to return non-matching lines

dpkg --search absolute_file_name
	find what package a particular file belongs to

apt-get update
	refresh apt-get's cache of package information using the repository
	/etc/apt/sources.list

apt-get upgrade
	upgrade installed softwares.

apt-get update && apt-get upgrade
	best way to use the commands.

pt-get dist-upgrade
	in addition to performing the function of upgrade, also intelligently handles changing dependencies with new versios of packages
apt-get install lynx
apt-get remove lynx
apt-get install lynx-
apt-get --purge remove lynx
	remove configuration files too.

apt-cache search slite3
	Pesquisar por pacotes

apt-cache show torcs
	show info about a package

apt-cache policy torcs
	show policy about a package

aptitude
	show installed packages

aptitude show package_name
	display package details

aptitude --search package_name
	look for a package

aptitude install package_name
	install a package

#
indica que está logado como usuário root

sudo -l
loga como usuário root

date
obtem a data do sistema

/bin - Core operation system commands.
/boot - kernel and files needed to load the kernel.
/dev - Device entries for disks, printers, pseudo-terminals, etc.
/etc - Critical startup and configuration files.
/home - Default home directories for users.
/lib - Libraries, shared libraries, and parts of the C compiler.
/media - Mount points for filessystems on removable media.
/mnt - Temporary mount points, mounts for removable media.
/opt - Optional software packages (not consistently used).
/proc - Information about all running process.
/root - Home directory of the superuser.
/sbin - Commands needed for minimal system operability.
/tmp - Temporary files that may disappear between reboots.
/usr - Hierarchy of secondary files and commands.
/usr/bin - Most commands and executable files.
/usr/include - Header files for compiling C programs.
/usr/lib - Libraries; also, support files for standard programs.
/usr/local - Software you write or install.
/usr/share - Items that might be common to multiple systems.
/var - System-specific data and configuration files.

date "APR 21 2013 21:47:00"
date +%T -s "10:13:13"
Configurar a data

free
mémoria ram livre

cd -
volta para o diretório anterior

cd ~usuário
vai para a pasta de um usuário espcífico

cd "$(find -name ofic* -quit)"
use find as argument

mkdir -p dir1/sub1/sub2
create directories and subdirectories

file file_name
lista o tipo do arquivo

less file_name - view content file
/search_name - pesquisa
n - próximo da pesquisa
q - sair do less 

dpkg --get-selections
obtem os programas instalados

apt-get autoremove
remove software sem dependências

whereis software_name
procura por arquivos de configuração

rm -rf /etc/apache2
remove o diretório

cp -u *.txt dir_destino
copia todos os aqruivos que não existem ou são mais novos

cp -i a.txt b.txt
ask if you want overwrite hte file

cp -R dir_a/ dir_b/
copy all files

mv a.txt b.txt
rename a file

ln src_file link
cria um hard link

ln -s src_file link
cria um symbolic link

cp /var/* .
copia tudo para o diretório atual

type -a cp
	mostra o tipo do comando, -a mostra todos em vez de mostrar somente o primeiro
	show all if have a built-in shell command and a external program

which ls
mostra a localização do comando

PATH=$PATH:"/var"
	adiciona uma caminho na variável de ambiente

PATH=$PATH:.
	put current directoy into path

./
You need the ./ bit to tell the shell where the executable is, since the current directory is unlikely to be in $PATH.

tar - archiving utility
	-z redirects to gzip (.gz)
	-j redirects to bzip2 (.bz2)
	-f use archive
	-x extract
	-v verbose
	-c create
	-t list but not extract

tar -xzvf file_name.tar.gz
tar -jxf file.tar.bz2

gzip -d <file>
extract .gz files

unzip <file>
extract .zip files

unrar x <file>
extract .rar files

sudo date -s "11 APR 2014 07:34:00"
configurar a data

man ls
man 1 ls
mostra a documentação do comando ls

ls -h ou ls --help
mostra o help do comando ls

apropos command
man -k command
pesquisa pelo comando no manpages names e nas descrições

stat file
mostra informações do arquivo

ls
	-F mostra o tipo do arquivo / diretório * executavel, @ symbolic link, % whiteout, = socket, | FIFO
	-R recursive - show directory content
	-d list name directory, no the content directory
	-t order by date
	-tr order by reverse date
	-a list hide files
	-l list in long format
	-i inode number

ls -l --time=atime a.txt
show access time instead change time

pwd
print working directory

env
printenv
	view ao global enviroment variables

printenv USER
	view the value of USER enviroment variable

set
	view all enviroment variables (local, global, user-defined), shell variables and functions variables

echo $USER
view the value of USER enviroment variable

unset var_name
	remove a variable

ls | grep java
obtem todas as linha que contem java

grep - global regular expression print
	-i  enable case insensitive
	-q  silent mode - return 0 if match
	-v  output lines that don't match the pattern
	-n  show line nuber
	-c  count number of lines
	-e  specify more than one matching pattern
	-w  exactly match word surround by by non-word constituent character

	searches all files in a directory
		grep -R Arctic /home
		grep -Rl Arctic /home

	more than one pattern
		egrep "UID|bash" file
		grep -E 'word1|word2' file
		grep -e string1 -e string2 file

egrep - offshoot of grep
	allows you to specify POSIX extended regular expressions, which contain more characters for specifying the matching pattern

fgrep - offshoot of grep
	allows you to specify matching patterns as a list of fi xed-string values, separated by newline characters

sed - stream editor, but can edit files directly too
	sed -i -e 's/foo/bar/g' filename
	s is used to replace the found expression "foo" with "bar"
	g stands for "global", meaning to do this for the whole line. If you leave off the g and "foo" appears twice on the same line, only the first "foo" is changed to "bar".
	-i option is used to edit in place on filename.
	-e option indicates a command to run.

cat file_name
imprimir um arquivo no console
-n print line number
-b print no empty line nuber

more file_name
imprimir um arquivo no console

less file_name
imprimir um arquivo no console
fast for big files

cat > a.txt
bla bla <c-d><c-d>
send the text to a.txt

/usr/share/applications$
launcher for applications

turn off
gnome-session-quit --power-off
gnome-session-quit --reboot

lsb_release -a
linux version

dpkg-reconfigure keyboard-configuration
keyboard configuration

ip a
iwconfig
find wireless interface

iwlist scan
scan for available networks

ifdown wlan0
shutdown interface wlan0

ifup wlan0
start interface wla0

wpa_passphrase my-ssid password
create password to use into /etc/network/interface

/etc/network/interface expemple
auto wlan0
iface wlan0 inet dhcp
	wpa-ssid Vivo WiFi
	wpa-psk as38492039asfkjalskfdj348390adflakjd

cat /proc/cpuinfo
lscpu
cpu info

cat /proc/meminfo
memory info

top (f to setup)
htop (improved top)
gnome-system-monitor
cpu and memory use

ps
	report a snapshot of the current processes
	-e show all precess
	-f full format listing
	-F full format listing (another)
	-l long format output
	--forest show subshell tree
	ps aux	list processes - BSD syntax
	ps li list processes - BSD syntax
	ps -p 48 	list process by id

pgrep firefox
get pid of firefox process

kill 1254
kill -15 1254
send a term(15) signal to the process
this allows the program to perform clean-up operations and exit smoothly

kill -l
list signal names

kill -SIGKILL 4545
kill -KILL 4545
kill KILL 4545
kill -9 4545
send to kernel, which shuts down the process
this is used to bypass programs that ignore the signals sent to them

killall http*
kill all processes that start with http

jobs
	list process in background for current shell
	-l list PID

lscpu - list cpu
lsusb - list usbs
lsscsi - list scsis
lsblk - list block devices

wc -l
count number of lines

who
show who is logged

mount
	list media devices currently mounted

mount -t type device directory
mount -t vfat /dev/sdb1 /media/disk
	mount a media device

umount [directory | device]
umount /home/rich/mnt
	unmount a device

umount -fl /dev/sdb1
	unmount

/etc/fstab
	filesystem mount at boot time

fdisk -l
	list partition table

fdisk /dev/sdb
	create partitions the disk sdb

mkfs.ext4 /dev/sdb1
	create a ext4 filesystem on partition /dev/sdb1

eject /dev/sdb1
	eject the device

man touch
	open manual for touch

apropos touch
man -k touch
displays a list of all topics in the man pages
show all references for touch on man pages

whatis touch
obtain a brief description only about a specific command whose exact name is already known

ps aux | grep 'node'
outputs all node.js programs running on a machine

uname -p
to know the architecture type of processor
Classic Shell Script - 9

touch file.txt
change timestamps file, if not exist create the file

touch text-{a,b,c}.txt
create files: text-a.txt, text-b.txt, text-c.txt

touch -a file.txt
change only the access time

dmesg
hardware error messages

chmod 777 file-name
	change permission

chmod [ugoa][+-][rwxXstugo] file_name
	u - owner
	g - group
	o - other
	a - all above
chmod u+x file_name

chown owner file_name
	change file owner

chown owner.group file_name
	change owner and group for file_name

chgrp group file_name
	change file group

xdg-open file-name
open a pdf

echo "hey" >&2
redirect stdout from echo command to stderr

1>file-name
>file-name
redirect stdout to file-name

1>>file-name
>>file-name
redirect and append stdout to file-name

2>file-name
redirect stderr to file-name

&>file-name
redirect borh stdout and stderr to file-name

m>n
m is a file descriptor, which defaults to 1, if not explicitly set
n is a file name

m>&n
m is a file descriptor, which defaults to 1, if not explicitly set
n is another file descriptior

stat file
show file status like timestamp

journalctl --unit=bash
show error msg from porcess bash

history
	list history of commands used
	-a force the history command to be writen, before exit the shell
	-n force the .bash_history to be read

!1234
	re-use history command 1234

!!
	re-use the last command

~/.bash_history
	keep the history command

du -shc *
size content directory
-s --summarize
-h --human-readable
-c --total
-a --all 
--max-depth=1

df
disk free - reports the amount of space used and available on currently
mounted filesystem

ctrl + d, ctrl + d
insert EOF in command line

uniq file.txt
filters out adjacent, duplicate lines in a file

hostname
get the computer name

sort -hr
sort lines
-h --human-numeric-sort (2K 1G)
-r --reverse
-n recognize numbers as numbers
-M --month-sort
-t --field-separator
-k --key 	position

run a program in a modified environment
env <program>
	-i, --ignore-environment
		start with an empty environment
	-u, --unset=NAME
		remove variable from the environment

send ICMP ECHO_REQUEST to network hosts
ping -c 3 -W 1 1.1.1.1
-c count
-W timeout

head -3 file_name | tail -1
select the 3th line
head -3  	# print tree first lines
tail -1		# print one end line

tail -f file_name
update, good to view log files

colrm 100
show the first 100 column for each line

cut -f1 -d: file_name
	f1	fild to extract
	-		delimiter
cut -c44-50
	print 44 column to 50
cut -c44-
	print 44 column to end

awk
'condition {action}'
dpkg -l | awk ' /'vim'/ {print $2}'
	print second column from line with 'vim'
ps -f | awk '{print $2, $8}'
	print column 2 and 8
awk 'NR==2'
	print second line

bc -q bash calculator
	-q suppresses the lengthy welcome banner
	bc <<< 'scale=2; 100/3' 	# 33.33


youtube-dl https://www.youtube.com/watch?v=iRYvuS9OxdA
download youtube video

youtube-dl --list-formats https://www.youtube.com/watch?v=iRYvuS9OxdA
list available formats

youtube-dl -f 18 https://www.youtube.com/watch?v=iRYvuS9OxdA
download a preferred file format

youtube-dl -a youtube_links.txt
download a alist of videos on file youtube_links.txt

setterm -reset
setterm -foreground cyan
setterm -background yellow
setterm -inversescreen on
change terminal colors

/etc/passwd
	match login name to a corresponding UID

useradd -D
	show system default

useradd user_name -m
	create a user_name 
	-m use /etc/skel as template

userdel -r user_name
	remove user
	-r remove /home/user_name

usermod
	change user account
	-l changes the login name
	-L locks the account
	-U unlocks the account
	-p change the password (avoid this, use passwd)

passwd user_name
	change the user_name password

passwd
	change current user password

GID
	group id
	/etc/group is like /etc/passwd

groupadd group_name
	create a new group

usermod -g group_name user_name
	replace the default group for the user account

usermod -G group_name user_name
	add user to more one group

groupmod -n new_name old_name 
	change group name

groupmod -g 1025 group_name
	change GID

groupdel group_name
	remove a group

group password allows a non-group member to temporarily become a member

file permission symbols
	- for files
	d for directories
	l for links
	c for character devices
	b for block device
	n for network devices

	r for read
	w for write
	x for execute

	owner - group - everyone

umask
	shows the default permissions

umask 022
	sets the default permissions
	0022 configured mask
	666 file default
	777 directory default
	666 - 022 = 644 (file configured)

file globbing
metacharacter wildcard
*, ?, [], !

open program in background
xterm &

suspend a program and put in backgroun
xterm
[ctrl + z]
bg

sh
default system shell
usally bin/sh -> bash

dash
start a dash shell

subshell is a child shell

alias ls='ls -l'
	create a alias
	-p show list of created alias

bash
	spawn a subshell

install from source
	unpack a software tarball with tar
	read the README or AAAREADME file
	./configure
		check your linux system to ensure it has the proper library dependencies
	make
		compile the source code
	make install
		install it in a common location on your linux system

xclip -selection c
	ls | xclip -selection c
	copy to clipboard

readlink -f file_name
realpath file_name
	show full path name for file_name

/etc/init.d
	create a script to be load at start-up system
	need complain the defaults (start stop switch)
	update-rc.d my_script defaults
		add to system start-up
	update-rc.d -f  my_script remove
		remove from system start-up

/etc/rc.local
	add command to rc.local to be load at start-up system

/etc/init/my_job.conf
	create a new job

gpg
	encryption

# Returns just the script’s name without the path
basename /home/Christine/test5b.sh
# -> test5b.sh

shopt
	# Show options status
	# Change additional shell optional behavior.
shopt -s nocaseglob
	# (set) no case sensitive
shopt -u nocaseglob
	# (unset) case sensitive


